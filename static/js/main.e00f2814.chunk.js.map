{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","props","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e00f2814.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h2>\n            Expense Tracker \n        </h2>\n    )\n}\n","export default (state, action) =>{\n    switch(action.type){\n        case 'DELETE_TRANSACTION':\n        return {\n            ...state,\n            transactions:state.transactions.filter(transaction => transaction.id !== action.payload)\n        }\n        case 'ADD_TRANSACTION':\n        return{\n            ...state,\n            transactions: [action.payload,...state.transactions]\n        }\n        default: return state;\n    }\n}","import React, {createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n//Initial State \nconst initialState = {\n    transactions:[]\n    }\n\n    //create Context\n    export const GlobalContext = createContext(initialState);\n\n    //provider component\n    export const GlobalProvider = ({ children }) => {\n    const [state,dispatch] = useReducer(AppReducer,initialState);\n\n    // Actions\n    function deleteTransaction(id) {\n        dispatch({\n            type:'DELETE_TRANSACTION',\n            payload: id\n        });\n    }\n\n    function addTransaction(transaction) {\n        dispatch({\n            type:'ADD_TRANSACTION',\n            payload: transaction\n        });\n    }\n\n    return(<GlobalContext.Provider value= { {\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction\n    }}>\n        {children}\n    </GlobalContext.Provider>);\n}\n","import React,{ useContext } from 'react';\nimport {GlobalContext } from \"../context/GlobalState\";\n\nexport const  Balance = () => {\n    const {transactions} = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1 >${total} </h1>\n        </>\n    )\n}\n","import React,{ useContext } from 'react';\nimport {GlobalContext } from \"../context/GlobalState\";\n\nexport const IncomeExpenses = () => {\n  const {transactions} = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  ).toFixed(2);\n\n    return (\n        <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p  className=\"money plus\">{income}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p  className=\"money minus\">{expense}</p>\n        </div>\n      </div>\n    )\n}\n","import React,{useContext} from 'react';\nimport {GlobalContext } from \"../context/GlobalState\";\n\nexport const Transaction = (props) => {\n    const {deleteTransaction} = useContext(GlobalContext);\n    const sign = props.transaction.amount < 0 ? '-' : '+';\n\n    return (\n        <li className={props.transaction.amount < 0 ? 'minus' : 'plus'}>\n        { props.transaction.text} <span>{sign}${Math.abs(props.transaction.amount)}</span><button className=\"delete-btn\" \n        onClick={() => deleteTransaction(props.transaction.id)}>x</button>\n        </li>\n    )\n}\n","import React,{ useContext }from 'react';\nimport { GlobalContext} from \"../context/GlobalState\";\nimport {Transaction} from \"../components/Transaction\";\n\nexport const TransactionList = () => {\n\nconst { transactions } = useContext(GlobalContext);\n\n\n    return (\n        <div>\n            <h3>History</h3>\n            <ul  className=\"list\">\n                { transactions.map(transaction => (<Transaction key = {transaction.id} transaction={ transaction}/>))}\n                \n            </ul> \n        </div>\n    )\n}\n","import React,{useState, useContext} from 'react';\nimport {GlobalContext } from \"../context/GlobalState\";\n\nexport const AddTransaction = () => {\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    const {addTransaction} = useContext(GlobalContext);\n\n    const onSubmit = e => {\n         e.preventDefault(); \n         const newTransaction = {\n            id:  Math.floor(Math.random() * 100000000),\n            text,\n            amount:+amount \n        }\n        addTransaction(newTransaction);\n    }\n    \n    return (\n        <>\n            <h3>Add new transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                <label htmlFor=\"text\">Text</label>\n                <input type=\"text\" value={text} onChange={(e) =>setText(e.target.value)} placeholder=\"Enter text...\" />\n                </div>\n                <div className=\"form-control\">\n                <label htmlFor=\"amount\"\n                    >Amount <br />\n                    (negative - expense, positive - income)</label\n                >\n                <input type=\"number\" value={amount} onChange={(e) =>setAmount(e.target.value)}  placeholder=\"Enter amount...\" />\n                </div>\n                <button className=\"btn\">Add transaction</button>\n            </form>\n    </>\n    )\n}\n","import React from 'react';\nimport {Header} from \"./components/Header\";\nimport {Balance} from \"./components/Balance\";\nimport {IncomeExpenses} from \"./components/IncomeExpenses\";\nimport {TransactionList} from \"./components/TransactionList\";\nimport {AddTransaction} from \"./components/AddTransaction\";\nimport {GlobalProvider} from \"./context/GlobalState\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}